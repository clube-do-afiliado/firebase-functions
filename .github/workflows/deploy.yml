name: Deploy

on:
  workflow_call:
    inputs:
      ENV:
        required: true
        type: string
      FIREBASE_PROJECT:
        required: true
        type: string
      FIREBASE_PROJECT_ENV:
        required: true
        type: string

jobs:
  environment:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag_name.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get TAG name
        id: tag_name
        run: echo "value=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  deploy:
    needs: [environment]
    name: Deploy
    env:
      # Environment
      ENV: ${{ inputs.ENV }}

    runs-on: ubuntu-latest
    environment: ${{ inputs.ENV }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Configure cleanup policy
        run: npx firebase-tools functions:artifacts:setpolicy --force --project=${{ inputs.FIREBASE_PROJECT_ENV }} --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Create .env file
        run: bash ${{ github.workspace }}/scripts/create-env.sh
        env:
          ENV: prod
          # Environment
          RELEASE: ${{ needs.environment.outputs.tag_name }}
          # Firebase
          PROJECT_ID: ${{ inputs.FIREBASE_PROJECT }}
          AUTH_DOMAIN: ${{ inputs.FIREBASE_PROJECT }}.firebaseapp.com
          API_KEY: ${{ secrets.FIREBASE_API_KEY }}

      - name: Publish on firebase function
        uses: jsryudev/deploy-firebase-functions@v20.0.1
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT: ${{ inputs.FIREBASE_PROJECT }}
          FUNCTIONS_DIR: functions
          args: deploy --force

      - name: Publish on firebase hosting - ${{ inputs.ENV }}
        uses: w9jds/firebase-action@v13.15.0
        with:
          args: deploy --only hosting:promo --project=${{ inputs.FIREBASE_PROJECT_ENV }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}